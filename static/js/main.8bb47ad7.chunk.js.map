{"version":3,"sources":["components/Navbar.js","util/MergeSort.js","util/QuickSort.js","util/BubbleSort.js","util/HeapSort.js","util/SelectionSort.js","components/styled-components/StyledBar.js","components/SortingVisualizer.js","util/InsertionSort.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","this","props","resetArray","mergeSort","heapSort","quickSort","insertionSort","bubbleSort","selectionSort","AppBar","style","background","position","href","zIndex","Toolbar","Grid","container","direction","justify","alignItems","item","lg","Button","color","onClick","size","marginLeft","Component","mergeSortAnimations","arr","startIdx","endIdx","animations","l","r","m","Math","floor","start","mid","end","start2","push","array","slice","ex1","ex2","value","index","merge","swap","i","j","temp","quickSortAnimations","left","right","pivotValue","swappingIndex","pivot","heapify","length","largest","StyledBar","styled","div","height","SortingVisualizer","random","setState","sortingAnimations","state","setTimeout","k","heapSortAnimations","radixSort","key","skip_animation","insertionSortAnimations","n","bubbleSortAnimations","minIdx","selectionSortAnimations","Container","paddingTop","map","val","idx","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8bb47ad7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// mui stuff\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GithubCorner from 'react-github-corner'\n\nclass Navbar extends Component {\n  render() {\n    const {\n      resetArray,\n      mergeSort,\n      heapSort,\n      quickSort,\n      insertionSort,\n      bubbleSort,\n      selectionSort,\n    } = this.props;\n\n    return (\n      <AppBar style={{ background: \"#202020\" }} position=\"static\">\n      <GithubCorner href='https://github.com/mdfaizan7/sorting-visualizer' style={{zIndex: 10000}}/>\n\n        <Toolbar>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item lg={2}>\n              <Button\n                style={{ color: \"#f04580\" }}\n                onClick={resetArray}\n                size=\"small\"\n              >\n                reset array\n              </Button>\n            </Grid>\n            <Grid item lg={2} />\n            <Grid item lg={8}>\n              <div>\n                <Button\n                  style={{ color: \"#6e9ddb\", marginLeft: \"10px\" }}\n                  onClick={mergeSort}\n                  size=\"small\"\n                >\n                  Merge Sort\n                </Button>\n                <Button\n                  style={{ color: \"#6e9ddb\", marginLeft: \"10px\" }}\n                  onClick={heapSort}\n                  size=\"small\"\n                >\n                  Heap Sort\n                </Button>\n                <Button\n                  style={{ color: \"#6e9ddb\", marginLeft: \"10px\" }}\n                  onClick={quickSort}\n                  size=\"small\"\n                >\n                  Quick Sort\n                </Button>\n                <Button\n                  style={{ color: \"#6e9ddb\", marginLeft: \"10px\" }}\n                  onClick={insertionSort}\n                  size=\"small\"\n                >\n                  Insertion Sort\n                </Button>\n                <Button\n                  style={{ color: \"#6e9ddb\", marginLeft: \"10px\" }}\n                  onClick={bubbleSort}\n                  size=\"small\"\n                >\n                  Bubble Sort\n                </Button>\n                <Button\n                  style={{ color: \"#6e9ddb\", marginLeft: \"10px\" }}\n                  onClick={selectionSort}\n                  size=\"small\"\n                >\n                  Selection Sort\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default Navbar;\n","function merge(arr, start, mid, end, animations) {\n  let start2 = mid + 1;\n\n  if (arr[mid] <= arr[start2]) {\n    return;\n  }\n\n  while (start <= mid && start2 <= end) {\n    if (arr[start] <= arr[start2]) {\n      start++;\n      animations.push({ array: arr.slice(), ex1: start, ex2: start2 });\n    } else {\n      let value = arr[start2];\n      let index = start2;\n\n      while (index !== start) {\n        arr[index] = arr[index - 1];\n        index--;\n      }\n      arr[start] = value;\n      animations.push({ array: arr.slice(), ex1: start, ex2: index });\n      start++;\n      mid++;\n      start2++;\n    }\n  }\n}\n\nfunction mergeSort(arr, l, r, animations) {\n  if (l < r) {\n    let m = Math.floor(l + (r - l) / 2);\n\n    mergeSort(arr, l, m, animations);\n    mergeSort(arr, m + 1, r, animations);\n\n    merge(arr, l, m, r, animations);\n    animations.push({ array: arr.slice(), ex1: l, ex2: r });\n  }\n}\n\nexport const mergeSortAnimations = (arr, startIdx, endIdx) => {\n  const animations = [];\n  mergeSort(arr, startIdx, endIdx, animations);\n\n  return animations;\n};\n","function swap(array, i, j) {\n  var temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\n\nfunction quickSort(array, left, right, animations) {\n  if (left < right) {\n    var pivotValue = array[right];\n    var swappingIndex = left;\n\n    for (var i = left; i < right; i++) {\n      var currentValue = array[i];\n\n      if (currentValue < pivotValue) {\n        swap(array, i, swappingIndex);\n        animations.push({\n          array: array.slice(),\n          pivot: right,\n          ex1: i,\n          ex2: swappingIndex,\n        });\n        swappingIndex++;\n      }\n    }\n    swap(array, swappingIndex, right);\n    animations.push({\n      array: array.slice(),\n      pivot: right,\n      ex1: i,\n      ex2: swappingIndex,\n    });\n    quickSort(array, left, swappingIndex - 1, animations);\n    quickSort(array, swappingIndex + 1, right, animations);\n  }\n}\n\nexport const quickSortAnimations = (arr, startIdx, endIdx) => {\n  const animations = [];\n  quickSort(arr, startIdx, endIdx, animations);\n\n  return animations;\n};\n","function swap(array, i, j) {\n  var temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\n\nexport const bubbleSortAnimations = (arr) => {\n  const animations = [];\n\n  let i,\n    j,\n    n = arr.length;\n  for (i = 0; i < n - 1; i++) {\n    let skip_animation = 0;\n    for (j = 0; j < n - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n      }\n      if (skip_animation === 0) {\n        animations.push({ array: arr.slice(), ex1: j, ex2: j + 1 });\n        skip_animation = 4;\n      } else skip_animation--;\n    }\n  }\n  animations.push({ array: arr.slice(), ex1: j, ex2: j + 1 });\n\n  return animations;\n};\n","function swap(array, i, j) {\n  var temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\n\nconst heapify = (arr, length, i, animations) => {\n  let largest = i;\n  let left = i * 2 + 1;\n  let right = left + 1;\n\n  if (left < length && arr[left] > arr[largest]) {\n    largest = left;\n  }\n\n  if (right < length && arr[right] > arr[largest]) {\n    largest = right;\n  }\n\n  if (largest !== i) {\n    swap(arr, largest, i);\n    heapify(arr, length, largest, animations);\n  }\n\n  return largest;\n};\n\nexport const heapSortAnimations = (arr) => {\n  const animations = [];\n\n  let length = arr.length;\n  let i = Math.floor(length / 2 - 1);\n  let k = length - 1;\n\n  while (i >= 0) {\n    let largest = heapify(arr, length, i, animations);\n    animations.push({ array: arr.slice(), ex1: largest, ex2: i });\n    i -= 1;\n    animations.push({ array: arr.slice(), ex1: largest, ex2: i });\n  }\n\n  while (k >= 0) {\n    swap(arr, 0, k);\n    let largest = heapify(arr, k, 0, animations);\n    animations.push({ array: arr.slice(), ex1: largest, ex2: k });\n    k -= 1;\n    animations.push({ array: arr.slice(), ex1: largest, ex2: k });\n  }\n\n  return animations;\n};\n","function swap(array, i, j) {\n  var temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\n\nexport const selectionSortAnimations = (arr) => {\n  const animations = [];\n  for (let i = 0; i < arr.length; i++) {\n    let minIdx = i;\n    let skip_animation = 0;\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[minIdx] > arr[j]) {\n        minIdx = j;\n      }\n      if (skip_animation === 0) {\n        animations.push({ array: arr.slice(), ex1: j, ex2: i });\n        skip_animation = 4;\n      } else skip_animation--;\n    }\n    if (minIdx !== i) {\n      swap(arr, minIdx, i);\n    }\n  }\n\n  animations.push({ array: arr });\n\n  return animations;\n};\n","import styled from \"styled-components\";\n\nexport const StyledBar = styled.div`\n  width: 3px;\n  height: ${(props) => props.height}px;\n  background-color: ${(props) => props.color};\n  margin: 0px 1px;\n`;\n","import React, { Component, Fragment } from \"react\";\nimport Navbar from \"./Navbar\";\n// sorting animations\nimport { mergeSortAnimations } from \"../util/MergeSort\";\nimport { quickSortAnimations } from \"../util/QuickSort\";\nimport { insertionSortAnimations } from \"../util/InsertionSort\";\nimport { bubbleSortAnimations } from \"../util/BubbleSort\";\nimport { heapSortAnimations } from \"../util/HeapSort\";\nimport { selectionSortAnimations } from \"../util/SelectionSort\";\n// styled components\nimport { StyledBar } from \"./styled-components/StyledBar\";\n// mui stuff\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst SORT_TIMEOUT = 50;\n\nclass SortingVisualizer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { array: [] };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray = () => {\n    const arr = [];\n    const min = 10;\n    const max = 580;\n    for (let i = 0; i < 130; i++) {\n      arr.push(Math.floor(Math.random() * (max - min) + min)); // pushes a random number between min and max\n    }\n\n    this.setState({ array: arr, ex1: 200, ex2: 200, pivot: 200 });\n  };\n\n  mergeSort = () => {\n    let sortingAnimations = mergeSortAnimations(\n      this.state.array,\n      0,\n      this.state.array.length\n    );\n    for (let i = 0; i < sortingAnimations.length - 1; i++) {\n      setTimeout(() => {\n        let { array, ex1, ex2 } = sortingAnimations[i];\n        this.setState({\n          array,\n          ex1,\n          ex2,\n        });\n      }, i * SORT_TIMEOUT);\n    }\n  };\n\n  heapSort = () => {\n    let sortingAnimations = heapSortAnimations(this.state.array);\n    for (let i = 0; i < sortingAnimations.length; i++) {\n      setTimeout(() => {\n        let { array, pivot, ex1, ex2 } = sortingAnimations[i];\n        this.setState({\n          array,\n          pivot,\n          ex1,\n          ex2,\n        });\n      }, i * SORT_TIMEOUT);\n    }\n  };\n\n  quickSort = () => {\n    let sortingAnimations = quickSortAnimations(\n      this.state.array,\n      0,\n      this.state.array.length\n    );\n    for (let i = 0; i < sortingAnimations.length; i++) {\n      setTimeout(() => {\n        let { array, pivot, ex1, ex2 } = sortingAnimations[i];\n        this.setState({\n          array,\n          pivot,\n          ex1,\n          ex2,\n        });\n      }, i * SORT_TIMEOUT);\n    }\n  };\n\n  radixSort = () => {\n    // TODO: make visualizer for radix sort\n  };\n\n  insertionSort = () => {\n    let sortingAnimations = insertionSortAnimations(this.state.array);\n    for (let i = 0; i < sortingAnimations.length - 1; i++) {\n      setTimeout(() => {\n        let { array, ex1, ex2 } = sortingAnimations[i];\n        this.setState({\n          array,\n          ex1,\n          ex2,\n        });\n      }, i * SORT_TIMEOUT);\n    }\n  };\n\n  bubbleSort = () => {\n    let sortingAnimations = bubbleSortAnimations(this.state.array);\n    for (let i = 0; i < sortingAnimations.length - 1; i++) {\n      setTimeout(() => {\n        let { array, ex1, ex2 } = sortingAnimations[i];\n        this.setState({\n          array,\n          ex1,\n          ex2,\n        });\n      }, i * SORT_TIMEOUT);\n    }\n  };\n\n  selectionSort = () => {\n    let sortingAnimations = selectionSortAnimations(this.state.array);\n    for (let i = 0; i < sortingAnimations.length - 1; i++) {\n      setTimeout(() => {\n        let { array, ex1, ex2 } = sortingAnimations[i];\n        this.setState({\n          array,\n          ex1,\n          ex2,\n        });\n      }, i * SORT_TIMEOUT);\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Navbar\n          resetArray={this.resetArray}\n          mergeSort={this.mergeSort}\n          heapSort={this.heapSort}\n          quickSort={this.quickSort}\n          radixSort={this.radixSort}\n          insertionSort={this.insertionSort}\n          bubbleSort={this.bubbleSort}\n          selectionSort={this.selectionSort}\n        />\n        <Container style={{ paddingTop: \"25px\" }}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-end\"\n          >\n            {this.state.array.map((val, idx) => (\n              <Grid item key={idx}>\n                {idx === this.state.pivot ? (\n                  <StyledBar height={val} color=\"red\" />\n                ) : idx === this.state.ex1 || idx === this.state.ex2 ? (\n                  <StyledBar height={val} color=\"orange\" />\n                ) : (\n                  <StyledBar height={val} color=\"seagreen\" />\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default SortingVisualizer;\n","function insertionSort(arr, animations) {\n  let key, j, i;\n  for (i = 1; i < arr.length; i++) {\n    key = arr[i];\n    j = i - 1;\n    let skip_animation = 0;\n    while (j >= 0 && arr[j] > key) {\n      arr[j + 1] = arr[j];\n      j--;\n      if (skip_animation === 0) {\n        animations.push({ array: arr.slice(), ex1: i, ex2: j });\n        skip_animation = 4;\n      } else skip_animation--;\n    }\n    arr[j + 1] = key;\n    animations.push({ array: arr.slice(), ex1: i, ex2: j });\n  }\n}\n\nexport const insertionSortAnimations = (arr) => {\n  const animations = [];\n  insertionSort(arr, animations);\n\n  return animations;\n};\n","import React from \"react\";\nimport SortingVisualizer from \"./components/SortingVisualizer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}